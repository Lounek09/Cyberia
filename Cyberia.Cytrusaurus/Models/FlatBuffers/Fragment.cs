// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Cyberia.Cytrusaurus.Models.FlatBuffers
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Fragment : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static Fragment GetRootAsFragment(ByteBuffer _bb) { return GetRootAsFragment(_bb, new Fragment()); }
  public static Fragment GetRootAsFragment(ByteBuffer _bb, Fragment obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Fragment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile? Files(int j) { int o = __p.__offset(6); return o != 0 ? (Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile?)(new Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FilesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle? Bundles(int j) { int o = __p.__offset(8); return o != 0 ? (Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle?)(new Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BundlesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Fragment> CreateFragment(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      VectorOffset filesOffset = default(VectorOffset),
      VectorOffset bundlesOffset = default(VectorOffset)) {
    builder.StartTable(3);
    Fragment.AddBundles(builder, bundlesOffset);
    Fragment.AddFiles(builder, filesOffset);
    Fragment.AddName(builder, nameOffset);
    return Fragment.EndFragment(builder);
  }

  public static void StartFragment(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddFiles(FlatBufferBuilder builder, VectorOffset filesOffset) { builder.AddOffset(1, filesOffset.Value, 0); }
  public static VectorOffset CreateFilesVector(FlatBufferBuilder builder, Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFilesVectorBlock(FlatBufferBuilder builder, Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFilesVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFilesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.GameFile>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFilesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBundles(FlatBufferBuilder builder, VectorOffset bundlesOffset) { builder.AddOffset(2, bundlesOffset.Value, 0); }
  public static VectorOffset CreateBundlesVector(FlatBufferBuilder builder, Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBundlesVectorBlock(FlatBufferBuilder builder, Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBundlesVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBundlesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Bundle>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBundlesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Fragment> EndFragment(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Cyberia.Cytrusaurus.Models.FlatBuffers.Fragment>(o);
  }
}


static public class FragmentVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*Files*/, Cyberia.Cytrusaurus.Models.FlatBuffers.GameFileVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*Bundles*/, Cyberia.Cytrusaurus.Models.FlatBuffers.BundleVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
